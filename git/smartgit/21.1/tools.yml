tools:
- name: Open File
  fileStarter: {command: /usr/bin/open, parameters: '${filePath}'}
  useForOpen: true
  waitUntilFinished: false
  filePattern: '*'
  forFilesNotDirectories: true
- id: revealInFinder
  name: Reveal in Finder
  fileStarter: {command: /usr/bin/open, parameters: '--reveal ${filePath}'}
  useForOpen: false
  waitUntilFinished: true
  filePattern: '*'
- id: openInTerminalSh
  name: Open in Terminal
  fileStarter: {command: '${smartGitDir}/Contents/Resources/open-terminal.sh', parameters: '${filePath}'}
  useForOpen: true
  waitUntilFinished: false
  filePattern: '*'
  forFilesNotDirectories: false
- id: editInTextEditor
  name: Edit
  fileStarter: {command: /usr/bin/open, parameters: '-t ${filePath}'}
  useForOpen: true
  waitUntilFinished: false
  filePattern: '*'
  forFilesNotDirectories: true
- id: formatPatch
  name: Format Patch
  fileStarter: {command: '${smartGitDir}/Contents/Resources/format-patch.sh', parameters: '${dirSelect}
      ${commit} ${commit2}'}
  useForOpen: false
  waitUntilFinished: true
  filePattern: '*'
- id: formatPatch1
  name: Format Patch
  fileStarter: {command: '${smartGitDir}/Contents/Resources/format-patch.sh', parameters: '${dirSelect}
      ${commit}'}
  useForOpen: false
  waitUntilFinished: true
  filePattern: '*'
- id: applyPatch
  name: Apply Patch
  fileStarter: {command: '${git}', parameters: 'apply ${fileOpen}'}
  useForOpen: false
  waitUntilFinished: true
  filePattern: '*'
- id: verifyDatabase
  name: Verify Database
  fileStarter: {command: '${git}', parameters: fsck --full --no-progress}
  useForOpen: false
  waitUntilFinished: true
  filePattern: '*'
- id: fastForwardMerge
  name: Fast-Forward Merge
  fileStarter: {command: '${smartGitDir}/Contents/Resources/ff-merge.sh', parameters: '${commit}'}
  useForOpen: false
  waitUntilFinished: true
  filePattern: '*'
  forRefsNotShas: true
  confirmationMessage: Do you want to fast forward '${commit}' to its tracking branch?
- id: gitVersion
  name: Git Version
  fileStarter: {command: '${git}', parameters: --version}
  useForOpen: false
  waitUntilFinished: true
  filePattern: '*'
- id: gitLfsVersion
  name: Git-LFS Version
  fileStarter: {command: '${git}', parameters: lfs --version}
  useForOpen: false
  waitUntilFinished: true
  filePattern: '*'
- id: gitConfigList
  name: Git Config
  fileStarter: {command: '${git}', parameters: config --list --show-origin}
  useForOpen: false
  waitUntilFinished: true
  filePattern: '*'
manuallyDeletedIds: []
